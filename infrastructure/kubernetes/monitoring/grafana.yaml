# Grafana Kubernetes Manifest v9.5.0
# Purpose: Deploy and configure Grafana monitoring dashboard for Estate Kit application

---
# Persistent Volume Claim for Grafana storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage
  namespace: estate-kit
  labels:
    app: estate-kit
    component: monitoring
    service: grafana
    managed-by: terraform
  annotations:
    backup.velero.io/backup-volumes: grafana-storage
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2
  resources:
    requests:
      storage: 10Gi

---
# ConfigMap for Grafana configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: estate-kit
  labels:
    app: estate-kit
    component: monitoring
    service: grafana
    managed-by: terraform
data:
  grafana.ini: |
    [server]
    protocol = https
    domain = grafana.estate-kit.local
    root_url = %(protocol)s://%(domain)s/
    cert_file = /etc/grafana/certs/tls.crt
    cert_key = /etc/grafana/certs/tls.key

    [security]
    admin_user = ${GRAFANA_ADMIN_USER}
    admin_password = ${GRAFANA_ADMIN_PASSWORD}
    allow_embedding = true
    cookie_secure = true
    disable_gravatar = true
    strict_transport_security = true
    strict_transport_security_max_age_seconds = 31536000

    [auth]
    disable_login_form = false
    oauth_auto_login = false
    disable_signout_menu = false

    [session]
    provider = redis
    provider_config = addr=redis-service:6379,pool_size=100,db=0
    cookie_secure = true
    session_lifetime = 24h

    [analytics]
    reporting_enabled = false
    check_for_updates = true

    [metrics]
    enabled = true
    interval_seconds = 10

    [log]
    mode = console file
    level = info

  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus-service:9090
        isDefault: true
        jsonData:
          timeInterval: "15s"
          queryTimeout: "30s"
          httpMethod: "POST"
      
      - name: CloudWatch
        type: cloudwatch
        jsonData:
          authType: "arn"
          defaultRegion: "ca-central-1"
          assumeRoleArn: "${AWS_ROLE_ARN}"

  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'Estate Kit Dashboards'
        orgId: 1
        folder: 'Estate Kit'
        type: file
        disableDeletion: true
        updateIntervalSeconds: 30
        options:
          path: /var/lib/grafana/dashboards

---
# Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: estate-kit
  labels:
    app: estate-kit
    component: monitoring
    service: grafana
    managed-by: terraform
    version: 9.5.0
  annotations:
    grafana.io/version: "9.5.0"
    grafana.io/datasources: "prometheus"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: estate-kit
      service: grafana
  template:
    metadata:
      labels:
        app: estate-kit
        service: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:9.5.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-credentials
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-credentials
                  key: admin-password
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            - name: grafana-config
              mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              subPath: datasources.yaml
            - name: grafana-config
              mountPath: /etc/grafana/provisioning/dashboards/dashboards.yaml
              subPath: dashboards.yaml
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 30
            failureThreshold: 10
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-storage
        - name: grafana-config
          configMap:
            name: grafana-config

---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: estate-kit
  labels:
    app: estate-kit
    component: monitoring
    service: grafana
    managed-by: terraform
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http-grafana
      protocol: TCP
      name: http
  selector:
    app: estate-kit
    service: grafana