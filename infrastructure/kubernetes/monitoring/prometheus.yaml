# Prometheus Kubernetes Manifests for Estate Kit
# Version: v2.45.0
# Purpose: Monitoring system deployment with enhanced security and compliance features

---
# StatefulSet for Prometheus Server
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: estate-kit
  labels:
    app: estate-kit
    component: monitoring
    service: prometheus
    managed-by: terraform
    environment: production
  annotations:
    description: "Prometheus monitoring deployment for Estate Kit"
    prometheus.io/version: "v2.45.0"
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    security.compliance/pipeda: "enabled"
    backup.velero.io/backup-volumes: "prometheus-data"
spec:
  serviceName: prometheus
  replicas: 1
  selector:
    matchLabels:
      app: estate-kit
      component: monitoring
      service: prometheus
  template:
    metadata:
      labels:
        app: estate-kit
        component: monitoring
        service: prometheus
    spec:
      serviceAccountName: prometheus
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
        runAsNonRoot: true
      containers:
      - name: prometheus
        image: prom/prometheus:v2.45.0
        args:
          - "--config.file=/etc/prometheus/prometheus.yml"
          - "--storage.tsdb.path=/prometheus"
          - "--storage.tsdb.retention.time=15d"
          - "--web.console.libraries=/usr/share/prometheus/console_libraries"
          - "--web.console.templates=/usr/share/prometheus/consoles"
        ports:
        - containerPort: 9090
          protocol: TCP
          name: http
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: "1"
            memory: 1Gi
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-data
          mountPath: /prometheus
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /-/ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 30
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
  volumeClaimTemplates:
  - metadata:
      name: prometheus-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: gp2
      resources:
        requests:
          storage: 50Gi

---
# Service for Prometheus
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: estate-kit
  labels:
    app: estate-kit
    component: monitoring
    service: prometheus
spec:
  ports:
  - port: 9090
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: estate-kit
    component: monitoring
    service: prometheus

---
# ConfigMap for Prometheus Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: estate-kit
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 30s
    
    scrape_configs:
      - job_name: 'estate-kit-services'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names: ['estate-kit']
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            regex: estate-kit
            action: keep
      
      - job_name: 'estate-kit-api'
        metrics_path: /metrics
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names: ['estate-kit']

---
# ServiceMonitor for Prometheus Operator
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: estate-kit-monitor
  namespace: estate-kit
spec:
  selector:
    matchLabels:
      app: estate-kit
  endpoints:
  - port: http
    interval: 15s

---
# PrometheusRule for Alerting Rules
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: estate-kit-alerts
  namespace: estate-kit
spec:
  groups:
  - name: estate-kit-alerts
    rules:
    - alert: HighCPUUsage
      expr: container_cpu_usage_seconds_total > 70
      for: 5m
      labels:
        severity: warning
      annotations:
        description: "Container CPU usage above 70% threshold"
        runbook_url: "https://wiki.estate-kit.com/monitoring/high-cpu"
    
    - alert: HighMemoryUsage
      expr: container_memory_usage_bytes > 80
      for: 5m
      labels:
        severity: warning
      annotations:
        description: "Container memory usage above 80% threshold"
        runbook_url: "https://wiki.estate-kit.com/monitoring/high-memory"
    
    - alert: APILatency
      expr: http_request_duration_seconds > 0.5
      for: 5m
      labels:
        severity: warning
      annotations:
        description: "API latency above 500ms threshold"
        runbook_url: "https://wiki.estate-kit.com/monitoring/api-latency"
    
    - alert: HighErrorRate
      expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.01
      for: 5m
      labels:
        severity: critical
      annotations:
        description: "Error rate above 1% threshold"
        runbook_url: "https://wiki.estate-kit.com/monitoring/error-rate"