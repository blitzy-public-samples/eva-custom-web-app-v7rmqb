# Kubernetes HPA configuration for Estate Kit frontend service
# Version: autoscaling/v2
# Purpose: Automatically scale frontend pods based on CPU and memory utilization
# Last Modified: 2024-02-15

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: estate-kit
  labels:
    app: estate-kit
    component: frontend
    managed-by: terraform
  annotations:
    description: "Estate Kit frontend web application HPA"
    owner: "DevOps"
    last-modified: "2024-02-15"
    scaling-policy: "production"

spec:
  # Target the frontend deployment for scaling
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  
  # Scaling limits
  minReplicas: 3  # Minimum replicas to ensure high availability
  maxReplicas: 10 # Maximum replicas to control costs
  
  # Scaling metrics
  metrics:
    # CPU-based scaling
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70  # Scale when CPU hits 70%
    
    # Memory-based scaling
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80  # Scale when memory hits 80%
  
  # Scaling behavior configuration
  behavior:
    # Scale up configuration
    scaleUp:
      stabilizationWindowSeconds: 60  # Wait 60s before scaling up again
      policies:
        - type: Pods
          value: 2                    # Add up to 2 pods at a time
          periodSeconds: 60           # Every 60 seconds
      selectPolicy: Max              # Use the highest recommended change
    
    # Scale down configuration
    scaleDown:
      stabilizationWindowSeconds: 300 # Wait 5 minutes before scaling down
      policies:
        - type: Pods
          value: 1                    # Remove 1 pod at a time
          periodSeconds: 60           # Every 60 seconds
      selectPolicy: Min              # Use the lowest recommended change