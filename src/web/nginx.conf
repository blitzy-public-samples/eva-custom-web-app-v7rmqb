# NGINX Version: 1.24-alpine
# Purpose: Production configuration for Estate Kit frontend application

# User and worker configuration
user nginx;
worker_processes auto;

events {
    worker_connections 2048;
    multi_accept on;
    use epoll;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    server_tokens off;

    # Optimization settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    client_max_body_size 50m;
    client_body_buffer_size 128k;
    
    # Proxy settings
    proxy_read_timeout 60s;
    proxy_connect_timeout 60s;
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 4 32k;

    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '"$request_time" "$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main buffer=32k flush=5s;
    error_log /var/log/nginx/error.log warn;

    # Gzip configuration
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types text/plain
               text/css
               text/javascript
               application/javascript
               application/x-javascript
               application/json
               application/xml
               application/x-protobuf
               application/vnd.ms-fontobject
               image/svg+xml
               image/x-icon
               font/opentype
               font/ttf
               font/eot
               font/otf;

    # Rate limiting zone
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_status 429;

    # Main server configuration
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Health check for Kubernetes
        location /health {
            access_log off;
            return 200;
        }

        # Static assets handling with aggressive caching
        location /static/ {
            expires max;
            add_header Cache-Control "public,max-age=31536000,immutable";
            add_header X-Cache-Status $upstream_cache_status;
            try_files $uri =404;
        }

        location /assets/ {
            expires max;
            add_header Cache-Control "public,max-age=31536000,immutable";
            add_header X-Cache-Status $upstream_cache_status;
            try_files $uri =404;
        }

        # API requests - no caching
        location /api/ {
            limit_req zone=api_limit burst=20 nodelay;
            add_header Cache-Control "no-store";
            add_header Pragma "no-cache";
            proxy_pass http://api-service;  # Kubernetes service name
        }

        # Main location block for SPA
        location / {
            try_files $uri $uri/ /index.html;
            
            # Security headers
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options "DENY" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.auth0.com https://js.intercomcdn.com https://widget.intercom.io; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' data: https://fonts.gstatic.com; img-src 'self' data: blob: https://*.intercomcdn.com https://s3.ca-central-1.amazonaws.com; connect-src 'self' https://*.auth0.com https://*.intercom.io https://api.estate-kit.com wss://*.intercom.io; frame-src 'self' https://*.auth0.com https://*.intercom.io; media-src 'self' https://*.intercom.io; object-src 'none'; base-uri 'self';" always;

            # Basic security headers for all responses
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options "DENY" always;
        }

        # Error page handling
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}