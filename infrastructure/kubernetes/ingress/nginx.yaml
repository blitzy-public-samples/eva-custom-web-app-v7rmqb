# NGINX Ingress Controller Configuration v1.8.1
# Provides secure routing, TLS termination, WAF protection and load balancing for Estate Kit services

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: estate-kit-ingress
  namespace: estate-kit
  labels:
    app: estate-kit
    component: ingress
    managed-by: terraform
  annotations:
    # Ingress class and SSL configuration
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    
    # Request size and timeout configurations
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    
    # TLS certificate management
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Security headers configuration
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";

spec:
  # TLS configuration
  tls:
  - hosts:
    - ${DOMAIN_NAME}
    secretName: estate-kit-tls
  
  # Routing rules
  rules:
  - host: ${DOMAIN_NAME}
    http:
      paths:
      # API routes
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: estate-kit-backend
            port:
              number: 80
      # Frontend routes
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80

---
# NGINX Ingress Controller Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-ingress-controller-config
  namespace: estate-kit
data:
  # General configuration
  use-forwarded-headers: "true"
  
  # Buffer configurations for performance
  proxy-buffer-size: "16k"
  client-header-buffer-size: "16k"
  large-client-header-buffers: "4 16k"
  
  # Security configurations
  enable-modsecurity: "true"
  enable-owasp-core-rules: "true"
  
  # TLS configuration
  ssl-protocols: "TLSv1.2 TLSv1.3"
  ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"

---
# NGINX Ingress Controller Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: estate-kit
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-ingress
  template:
    metadata:
      labels:
        app: nginx-ingress
    spec:
      containers:
      - name: nginx-ingress-controller
        image: k8s.gcr.io/ingress-nginx/controller:v1.8.1
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        ports:
        - containerPort: 80
        - containerPort: 443
        args:
        - /nginx-ingress-controller
        - --configmap=$(POD_NAMESPACE)/nginx-ingress-controller-config
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx
        - --election-id=ingress-controller-leader
        - --ingress-class=nginx
        - --metrics-enabled
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace

---
# Prometheus ServiceMonitor for metrics collection
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: nginx-ingress-controller
  namespace: monitoring
  labels:
    app: nginx-ingress
spec:
  selector:
    matchLabels:
      app: nginx-ingress
  endpoints:
  - port: metrics
    interval: 30s

---
# HorizontalPodAutoscaler for dynamic scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-ingress-controller
  namespace: estate-kit
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx-ingress-controller
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80