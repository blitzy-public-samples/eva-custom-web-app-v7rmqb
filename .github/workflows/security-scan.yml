# Estate Kit Security Scan Workflow
# Implements comprehensive security scanning including vulnerability assessment,
# SAST analysis, and compliance validation for PIPEDA/HIPAA standards
name: Security Scan

# Trigger configuration
on:
  # Weekly scheduled scan
  schedule:
    - cron: '0 0 * * 0'  # Run at midnight every Sunday
  # Manual trigger
  workflow_dispatch:
  # On code changes to critical paths
  push:
    branches:
      - main
    paths:
      - 'src/backend/**'
      - 'src/web/**'
      - 'infrastructure/**'

# Concurrency control to prevent parallel runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Required permissions
permissions:
  contents: read
  security-events: write
  actions: read
  id-token: write

# Environment variables
env:
  NODE_VERSION: '18.x'
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  vulnerability-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Snyk
        uses: snyk/actions/setup@v3

      - name: Run Snyk vulnerability scan
        run: |
          snyk test --severity-threshold=high \
            --all-projects \
            --detection-depth=4 \
            --fail-on=upgradable
        continue-on-error: false

      - name: Run npm audit
        run: npm audit --audit-level=high

      - name: Run OWASP dependency check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'Estate Kit'
          path: '.'
          format: 'HTML'
          args: >
            --suppression suppression.xml
            --failOnCVSS 7
            --enableRetired

      - name: Upload vulnerability report
        uses: actions/upload-artifact@v3
        with:
          name: vulnerability-report
          path: reports/
          retention-days: 90

  code-analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript, python
          queries: security-extended,security-and-quality

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:javascript,typescript,python"

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        with:
          args: >
            -Dsonar.projectKey=estate-kit
            -Dsonar.sources=src
            -Dsonar.tests=test
            -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.coverage.exclusions=test/**,**/*.test.*
            -Dsonar.qualitygate.wait=true

      - name: Upload SARIF report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif

  security-audit:
    name: Security Controls Audit
    runs-on: ubuntu-latest
    needs: [vulnerability-scan, code-analysis]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Run security audit script
        run: |
          node -r ts-node/register src/backend/scripts/security-audit.ts
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_KMS_KEY_ID: ${{ secrets.AWS_KMS_KEY_ID }}

      - name: Generate compliance report
        run: |
          echo "Generating compliance report..."
          node -e "
            const fs = require('fs');
            const report = {
              timestamp: new Date().toISOString(),
              compliance: {
                PIPEDA: {
                  dataEncryption: true,
                  accessControls: true,
                  dataResidency: process.env.AWS_REGION === 'ca-central-1'
                },
                HIPAA: {
                  encryption: true,
                  authentication: true,
                  auditLogging: true
                }
              }
            };
            fs.writeFileSync('compliance-report.json', JSON.stringify(report, null, 2));
          "

      - name: Upload audit reports
        uses: actions/upload-artifact@v3
        with:
          name: security-audit-reports
          path: |
            security-reports/
            compliance-report.json
          retention-days: 90

      - name: Send notifications
        if: always()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'security-alerts'
          slack-message: |
            Security Scan Results for Estate Kit:
            Status: ${{ job.status }}
            Workflow: ${{ github.workflow }}
            Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}